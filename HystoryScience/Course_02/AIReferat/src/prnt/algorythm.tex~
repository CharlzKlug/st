\Csection{Алгоритм программы}

Всего в программе определено 4 новых класса:

\begin{itemize}
\item{Object3D --- реализация модели трёхмерного объекта}
\item{widget --- главный виджет графического интерфейса пользователя}
\item{Autopilot --- объект, отвечающий за режим автоматического вращения системы координат}
\item{Sleeper --- объект, предназначенный для реализации паузы в работе программы}
\end{itemize}

\subsection*{Object3D}

В этом объекте реализуется хранение, обработка и передача информации о трёхмерном объекте. Для хранения информации о точках фигуры используется двумерный массив \lstinline|objectDots| с динамическим выделением памяти. Хранение информации о связях между точками осуществляется в одномерном массиве \lstinline|dotsLinks| также с динамическим выделением памяти. Углы поворота вокруг осей $OX$, $OY$ и $OZ$ хранятся соответственно в переменных angleX, angleY, angleZ.

При создании объекта Object3D ему передаются массивы, содержащие данные о координатах точек и о связях между точками. Далее, в процессе работы объекту передаются сведения о новых углах поворотов с помощью методов setXAngle, setYAngle и setZAngle. Кроме того, реализован метод, предназначенный для смены объекта ``на лету'' --- setObject. Всего в программе описаны три предустановленных объекта: куб, пирамида и звезда.

\subsection*{widget}

Основной виджет графического интерфейса пользователя. Рабочая графическая часть программы состоит из двух окон: ``Панели управления'' и канвы отображения объекта.

Панель управления объектом состоит из трёх слайдеров отвечающих за задание углов поворота:

\begin{itemize}
\item{aroundXSlider}
\item{aroundYSlider}
\item{aroundZSlider}
\end{itemize}

Также на панели управления расположены клавиша включения автопилота и выпадающий список, позволяющий выбрать фигуру трёхмерного объекта.

\subsection*{Autopilot}

Объект, реализующий автоматическую смену углов поворота по значениям угловых скоростей, сгенерированных датчиком случайных чисел. Основные элементы этого объекта:

\begin{itemize}
\item{startXAngle, startYAngle и startZAngle --- начальные значения углов поворота на момент включение автопилота.}
\item{vX, vY и vZ --- угловые скорости поворотов.}
\item{Метод generateSpeed --- генерация случайной угловой скорости.}
\item{currentSeconds --- переменная, хранящая время прошедшее с начала запуска автопилота.}
\item{process --- основная рабочая процедура автопилота}
\end{itemize}

Работа процедуры process заключается в следующем: до тех пор, пока булево значение enabled установлено в истинное значение, повторять: приостановить работу на 100 миллисекунд, прирастить значение текущего времение currentSeconds на 0.1 секунду, породить сигнал newAngles содержащий значения новых углов поворота по формуле:
$$\text{новый угол} = \text{угловая скорость} \times \text{текущее время} + \text{начальное значение угла}$$

Если будет включена пауза в работе автопилота (происходит при смене фигуры при включённом автопилоте), то работа приостанавливается на 100 миллисекунд, после чего повторяется проверка на снятие автопилота с паузы. Если же пользователь нажал на клавишу останова автопилота, то переменная enabled устанавливается в ложное значение и цикл while прекращает работу с последующей генерацией сигнала finished().

\subsection*{Sleeper}

Весь функционал этого объекта заключён в паузе, формируемой с помощью класса QThread. В теле класса Sleeper осуществляется вызов \verb|QThread::msleep(msecs)|, где \verb|msecs| --- время в миллисекундах.
